<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yajie.huayi.mapper.MoldMapper">
  <resultMap id="BaseResultMap" type="com.yajie.huayi.domain.Mold">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="length" jdbcType="DOUBLE" property="length" />
    <result column="width" jdbcType="DOUBLE" property="width" />
    <result column="height" jdbcType="DOUBLE" property="height" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `number`, `length`, width, height, `status`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mold
    where id = #{id,jdbcType=BIGINT}
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mold
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.yajie.huayi.domain.Mold" useGeneratedKeys="true">
    insert into mold (`number`, `length`, width, 
      height, `status`)
    values (#{number,jdbcType=VARCHAR}, #{length,jdbcType=DOUBLE}, #{width,jdbcType=DOUBLE}, 
      #{height,jdbcType=DOUBLE}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.yajie.huayi.domain.Mold" useGeneratedKeys="true">
    insert into mold
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="number != null">
        `number`,
      </if>
      <if test="length != null">
        `length`,
      </if>
      <if test="width != null">
        width,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="length != null">
        #{length,jdbcType=DOUBLE},
      </if>
      <if test="width != null">
        #{width,jdbcType=DOUBLE},
      </if>
      <if test="height != null">
        #{height,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yajie.huayi.domain.Mold">
    update mold
    <set>
      <if test="number != null">
        `number` = #{number,jdbcType=VARCHAR},
      </if>
      <if test="length != null">
        `length` = #{length,jdbcType=DOUBLE},
      </if>
      <if test="width != null">
        width = #{width,jdbcType=DOUBLE},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yajie.huayi.domain.Mold">
    update mold
    set `number` = #{number,jdbcType=VARCHAR},
      `length` = #{length,jdbcType=DOUBLE},
      width = #{width,jdbcType=DOUBLE},
      height = #{height,jdbcType=DOUBLE},
      `status` = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findCount" resultType="java.lang.Long">
    SELECT count(*)
    FROM
    mold m
    INNER JOIN mold_record mr ON mr.mold_id = m.id
    INNER JOIN (
    SELECT
    c.id id,
    c.number number,
    p.`name` `name`,
    p.id projectId,
    c.building_no building_no,
    c.floor_no floor_no
    FROM
    component c
    INNER JOIN project p ON p.id = c.project_id
    ) c ON mr.component_id = c.id
    where 1=1
    <include refid="whereMold"/>
  </select>
  <select id="findPage" resultType="com.yajie.huayi.domain.other.MoldRecordEntity">
    SELECT
    m.number moldNum,
    m.`status` `status`,
    c.`name` projectName,
    c.number componentNum,
    c.building_no buildingNo,
    c.floor_no floorNo,
    mr.create_at createAt,
    m.length length,
    m.width width,
    m.height height
    FROM
    mold m
    INNER JOIN mold_record mr ON mr.mold_id = m.id
    INNER JOIN (
    SELECT
    c.id id,
    c.number number,
    p.`name` `name`,
    p.id projectId,
    c.building_no building_no,
    c.floor_no floor_no
    FROM
    component c
    INNER JOIN project p ON p.id = c.project_id
    ) c ON mr.component_id = c.id
    where 1=1
    <include refid="whereMold"/>
    order by mr.id desc
    limit #{pageRequest.offset}, #{pageRequest.pageSize}
  </select>
  <sql id="whereMold">
    <if test="moldNum != null">
      m.`number` like CONCAT('%', #{moldNum}, '%')
    </if>
    <if test="status != null">
      m.`status` =#{status}
    </if>
    <if test="projectId != null">
      c.projectId =#{projectId}
    </if>
    <if test="componentNum != null">
      c.`number` like CONCAT('%', #{componentNum}, '%')
    </if>
  </sql>
</mapper>